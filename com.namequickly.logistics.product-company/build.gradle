plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.namequickly.logistics'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/release" }
}

ext {
    set('springCloudVersion', "2023.0.3")
    set('querydslVersion', "5.0.0") // QueryDSL 버전 추가
}

dependencies {
    // eureka client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // feign client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // postgresql
    runtimeOnly 'org.postgresql:postgresql'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // mapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // TODO 모니터링, 추적 시스템 개발 마지막 단계에 추가
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // TODO 도커 compose 잠시 중지
//	 developmentOnly 'org.springframework.boot:spring-boot-docker-compose'


    /* Test*/

    // Spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // test database
    testRuntimeOnly 'org.postgresql:postgresql'

    // JWT
    testCompileOnly 'io.jsonwebtoken:jjwt-api:0.12.5'
    testCompileOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    testCompileOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}

// TODO 테스트 단계에 jacoco 필요 시 추가